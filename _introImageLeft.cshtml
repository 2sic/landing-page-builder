@inherits ToSic.Sxc.Dnn.RazorComponent
@using System.Text.RegularExpressions;
@using ToSic.Razor.Blade;
@RenderPage("./shared/_Assets.cshtml")
@{ var parts = CreateInstance("shared/_Parts.cshtml"); }

<section class="co-container-outer position-relative co-intro @Header.Presentation.TextOptimization @Header.Presentation.BackgroundColor @(Text.Has(Header.Presentation.BGImage) ? "co-backgroundimage" : "") sc-element" @parts.SectionStyle() @Edit.TagToolbar(Header)>
@*    @Edit.Toolbar(Header) *@
    <div class="co-backgroundimage-overlay @Header.Presentation.BGImageEffects"></div>
    <div class="co-container-inner d-flex align-items-center sc-element" @Edit.Attribute("quick-edit-config", new { modules = new { enable = true }})>
        <div class="co-intro-wrapper">

            @RenderPage("./shared/_Block.cshtml")
            <div class="row align-items-center">
                <div class="col-12 col-md-6 mb-5 order-md-2 sc-element">
                    @Edit.Toolbar(Content)  
                    @if (Text.Has(Content.MicroTitle)) {
                        <h5>@Content.MicroTitle</h5>
                    }
                    <h1 class="display-4">@Content.Title</h1>
                    <div class="co-text mb-5">
                        @Html.Raw(Content.Body)
                    </div>
                    @parts.CtaList(Content.CTA)
                    @* @if(Content.CTA.Count > 0) {
                        foreach (var cta in AsList(Content.CTA)) {
                            @RenderPage("./shared/_Cta.cshtml", new { cta = cta})
                        }
                    } *@
                </div>
                @parts.ProbablyDuplicateVideoImageIconOrInnerContent(Content)
                @* <div class="col-12 col-md-6 mb-4 @(Content.UseInnerContent != null && Content.UseInnerContent ? "sc-content-block-list cta-form" : "")"
                    @Edit.ContextAttributes(Content, field: "InnerContent")>
                    @if (Content.UseInnerContent != null && Content.UseInnerContent) {
                        foreach (var innerContent in Content.InnerContent) {
                            @ToSic.Sxc.Blocks.Render.One(innerContent);
                        }
                    } else {
                        if (Text.Has(Content.Image) && String.IsNullOrEmpty(Content.VideoUrl)) {
                            <img class="img-fluid" src="@Content.Image?w=1050&amp;scale=both&amp;mode=max&amp;quality=70" alt="@Content.Title">
                        }

                        if (Text.Has(Content.Icon) && String.IsNullOrEmpty(Content.Image) && String.IsNullOrEmpty(Content.VideoUrl)) {
                            <div class="text-center">
                                <i class="co-icon fas @Content.Icon" aria-hidden="true"></i>
                            </div>
                        }

                        if(Text.Has(Content.VideoUrl)) {
                            var youTube = Regex.Match(Content.VideoUrl,
                                @"youtu(?:\.be|be\.com)/(?:.*v(?:/|=)|(?:.*/)?)([a-zA-Z0-9-_]+)");
                            var isYouTube = youTube.Success;
                            var youTubeUrl = isYouTube
                                ? "https://www.youtube.com/embed/" + youTube.Groups[1].Value + "?controls=1&fs=1&modestbranding=0&rel=0&showinfo=0&autohide=1&iv_load_policy=3&theme=dark&wmode=transparent"
                                : "";

                            <a data-fancybox="fancybox-@Dnn.Module.ModuleID" class="co-video" data-width="1280" data-height="720" data-caption="@Content.Title" href="@youTubeUrl">
                                @if(Text.Has(Content.Image)) {
                                <figure>
                                    <div class="overlay d-flex justify-content-center align-items-center w-100 h-100">
                                        <i class="fab fa-youtube"></i>
                                    </div>
                                    @(Tag.Img()
                                        .Class("img-fluid")
                                        .Src(Content.Image + "?w=" + 1050 + "&scale=both&mode=max&quality=70")
                                        .Alt(Content.Title))
                                </figure>
                                } else {
                                    <div class="dnnFormMessage dnnFormWarning">Preview Image not found. Please add Preview Image or turn off Video-Lightbox</div>
                                }
                            </a>
                        }
                    }
                </div> *@
            </div>
            @parts.HeaderCta(Header.CTA)
        </div>
    </div>
</section>
        
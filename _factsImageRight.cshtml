@inherits ToSic.Sxc.Dnn.RazorComponent
@using System.Text.RegularExpressions;
@using ToSic.Razor.Blade;
@RenderPage("./shared/_Assets.cshtml")

<section class="co-container-outer position-relative co-fact @Header.Presentation.TextOptimization @Header.Presentation.BackgroundColor @((!String.IsNullOrEmpty(Header.Presentation.BGImage)) ? "co-backgroundimage" : "") sc-element" style="@((!String.IsNullOrEmpty(Header.Presentation.BGImage)) ? "background-image:url('"+Header.Presentation.BGImage+"?w=2560&scale=both&quality=70')" : "")">
    @Edit.Toolbar(Header)
    <div class="co-backgroundimage-overlay @Header.Presentation.BGImageEffects"></div>
    <div class="co-container-inner" @Edit.Attribute("quick-edit-config", new { modules = new { enable = true }})>
        @RenderPage("./shared/_Block.cshtml")
        
        @{int i = 0;}
        @foreach (var fact in AsList(Data["Default"]))
        {
            <div class="row align-items-center mb-5 sc-element">         
                <div class="col-12 col-md-6 mb-4 @((i % 2) != 0 ? "order-md-2" : "text-right")">
                    @Edit.Toolbar(fact)
                    @if (!String.IsNullOrEmpty(fact.MicroTitle))
                    {
                        <h5>@fact.MicroTitle</h5>
                    }
                    <h1>@fact.Title</h1>
                    <div class="co-text mb-4">
                        @Html.Raw(fact.Body)
                    </div>
                </div>
                <div class="col-12 col-md-6 mb-4 @(fact.UseInnerContent != null && fact.UseInnerContent ? "sc-content-block-list cta-form" : "")" @Edit.ContextAttributes(fact, field: "InnerContent")>
                    @if (fact.UseInnerContent != null && fact.UseInnerContent) {
                        foreach (var innerContent in fact.InnerContent)
                        {
                            @ToSic.Sxc.Blocks.Render.One(innerContent);
                        }
                    } else {
                        if (!String.IsNullOrEmpty(fact.Image) && String.IsNullOrEmpty(fact.VideoUrl))
                        {
                            <img class="img-fluid" src="@fact.Image?w=1050&amp;scale=both&amp;mode=max&amp;quality=70" alt="@fact.Title">
                        }

                        if (!String.IsNullOrEmpty(fact.Icon) && String.IsNullOrEmpty(fact.Image) && String.IsNullOrEmpty(fact.VideoUrl))
                        {
                            <div class="text-center">
                                <i class="co-icon fas @fact.Icon" aria-hidden="true"></i>
                            </div>
                        }

                        if(!String.IsNullOrEmpty(fact.VideoUrl)) {
                            var youTube = Regex.Match(fact.VideoUrl,
                                @"youtu(?:\.be|be\.com)/(?:.*v(?:/|=)|(?:.*/)?)([a-zA-Z0-9-_]+)");
                            var isYouTube = youTube.Success;
                            var youTubeUrl = isYouTube
                                ? "https://www.youtube.com/embed/" + youTube.Groups[1].Value + "?controls=1&fs=1&modestbranding=0&rel=0&showinfo=0&autohide=1&iv_load_policy=3&theme=dark&wmode=transparent"
                                : "";

                            <a data-fancybox="fancybox-@Dnn.Module.ModuleID" class="co-video" data-width="1280" data-height="720" data-caption="@fact.Title" href="@youTubeUrl">
                                @if(Text.Has(fact.Image)) {
                                <figure>
                                    <div class="overlay d-flex justify-content-center align-items-center w-100 h-100">
                                        <i class="fab fa-youtube"></i>
                                    </div>
                                    @(Tag.Img()
                                        .Class("img-fluid")
                                        .Src(fact.Image + "?w=" + 1050 + "&scale=both&mode=max&quality=70")
                                        .Alt(fact.Title))
                                </figure>
                                } else {
                                    <div class="dnnFormMessage dnnFormWarning">Preview Image not found. Please add Preview Image or turn off Video-Lightbox</div>
                                }
                            </a>
                        }
                    }
                </div>
            </div>
            i++;
        }

        @RenderPage("./shared/_ButtonList.cshtml")
    </div>
</section>